@model MukMafiaTool.Models.ViewModels.HomeViewModel

@using System.Linq

@{
    ViewBag.Title = "RLLMUK Mafiascum Helper";
}

@if(User.IsInRole("Admin"))
{
    <p>You are logged in as an admin!</p>
    @Html.ActionLink("Re-determine Days", "redeterminedays", "day");
    <br />
    @Html.ActionLink("Re-determine Votes", "redeterminevotes", "vote");
    <br />
    @Html.ActionLink("View Log Messages", "index", "log");
    <br />
    <a href="http://rllmukmafiascumscanner.azurewebsites.net/scan">Do a Scan</a>
    <br />
}

<br />
Keyword Search:
    @using(Html.BeginForm("index", "post", FormMethod.Get))
    {
        @Html.TextBox("searchString")
        @Html.DropDownList("playerName", @Model.PlayerNames, "Select a poster name to filter by")
        <input type="submit" value="Search" />
        <br/>
        @Html.CheckBox("includeQuoteBlocks", false)
        @Html.Label("Include text inside quote blocks in the search", new { style = "font-weight:normal" })
    }

(Separate search terms using spaces. Search for a phrase by using speech marks.)

<br />
<br />
Last Updated: @Model.LastUpdated.ToLocalTime().ToString("dddd dd MMMM - HH:mm") (UTC time)

<br />
<br />

Current Vote Situation (cannot guarantee 100% accuracy, if your vote isn't here try posting it again using "vote: name"):

<ul>
    @foreach (var voteGroup in Model.VoteSituation.CurrentVotes.GroupBy(v => v.Recipient).OrderByDescending(g => g.Count()).ThenBy(g => g.First().ForumPostNumber))
    {
        var listOfVoters = string.Join(", ", voteGroup.OrderBy(g => g.ForumPostNumber).Select(g => "<a href=\"http://www.rllmukforum.com/index.php?app=forums&module=forums&section=findpost&pid=" + g.ForumPostNumber + "\">" + g.Voter + "</a>"));

        <li><strong>@voteGroup.Key (@voteGroup.Count())</strong> - @Html.Raw(listOfVoters) </li>
    }

</ul>

Not Voted (@Model.VoteSituation.NotVoted.Count()) - @string.Join(", ", Model.VoteSituation.NotVoted.Select(p => p.Name))

<br />
<br />

List of Participants (@Model.Players.Where(p => p.IsInGame).Count() remain alive):

<ol>

    @foreach (var player in @Model.Players.OrderByDescending(p => p.PostCount))
    {
        object htmlAttributes = null;

        if (!player.IsInGame)
        {
            htmlAttributes = new { style = "text-decoration: line-through" };
        }

        <li>
            @Html.ActionLink(player.Name, "index", "post", new { playerName = player.Name }, htmlAttributes) (@player.PostCount)

            @if (!string.IsNullOrEmpty(@player.ExtraInfo))
            {
                @player.ExtraInfo
            }

            @if (User.IsInRole("Admin"))
            {
                @: - @Html.ActionLink("Edit", "index", "player", new { playerName = player.Name }, null)
                @: - @Html.ActionLink("Toggle", "ToggleParticipant", "Player", new { playerName = player.Name }, null)
            }
        </li>

    }

</ol>

<br />

Days:

<ul>
    @foreach(var day in @Model.Days.OrderBy(d => d.Number))
    {
        var FirstPostLink = string.Format("http://www.rllmukforum.com/index.php?app=forums&module=forums&section=findpost&pid={0}", day.StartForumPostNumber);
        
        <li>Day @day.Number - <a href="@FirstPostLink">First Post</a></li>
    }
</ul>