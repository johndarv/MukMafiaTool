@model MukMafiaTool.Models.ViewModels.HomeViewModel

@using System.Linq
@using MukMafiaTool.Helpers

@{
    ViewBag.Title = "Home";
}

@if (!string.IsNullOrWhiteSpace(ViewBag.Message))
{
    <p style="color: red"><strong>@ViewBag.Message</strong></p>
}

@if(User.IsInRole("Admin"))
{
    <p>You are logged in as an admin!</p>
    @Html.ActionLink("Re-determine Days", "redeterminedays", "day");
    <br />
    @Html.ActionLink("Re-determine Votes", "redeterminevotes", "vote");
    <br />
    @Html.ActionLink("View Log Messages", "index", "log");
}

<br />
Keyword Search:
    @using(Html.BeginForm("index", "post", FormMethod.Get))
    {
        @Html.TextBox("searchString")
        @Html.DropDownList("playerName", @Model.PlayerNames, "Select a poster name to filter by")
        <input type="submit" value="Search" />
        <br/>
        @Html.CheckBox("includeQuoteBlocks", false)
        @Html.Label("Include text inside quote blocks in the search", new { style = "font-weight:normal" })
    }

(Separate search terms using spaces. Search for a phrase by using speech marks.)

<br />
<br />
Last Updated: @Model.LastUpdated.ToLocalTime().ToString("dddd dd MMMM - HH:mm") (UTC time)
<br />
@Html.ActionLink("Trigger a scan of the forum", "index", "scan")

@if (User.IsInRole("Admin"))
{
    <br />
    <br />
    @Html.ActionLink("Set Last Updated Time To Three Months Ago", "SetLastUpdateTimeToThreeMonthsAgo", "LastUpdatedTime")
}

<br />
<br />

Current Vote Situation (cannot guarantee 100% accuracy, if your vote isn't here try posting it again using "vote: name"):

<ul>
    @foreach (var voteGroup in Model.VoteSituation.CurrentVotes.GroupBy(v => v.Recipient).OrderByDescending(g => g.Count()).ThenBy(g => g.First().ForumPostNumber))
    {
        var listOfVoters = string.Join(", ", voteGroup.OrderBy(g => g.ForumPostNumber).Select(g => ForumLinkGenerator.LinkToForumPost(g.ForumPostNumber, g.Voter)));

        <li><strong>@voteGroup.Key (@voteGroup.Count())</strong> - @Html.Raw(listOfVoters) </li>
    }

</ul>

Not Voted (@Model.VoteSituation.NotVoted.Count()) - @string.Join(", ", Model.VoteSituation.NotVoted.Select(p => p.Name))

@if (User.IsInRole("Admin"))
{
    <br />
    <br />
    @Html.ActionLink("View All Votes", "index", "vote");
}
<br />
<br />

List of Participants (@Model.Players.Where(p => p.IsInGame).Count() remain alive):

<table class="table-bordered table-condensed">
    <tr>
        <th>Forum Name</th>
        <th>Post Count</th>
        <th>Character</th>
        <th>Role(s)</th>
        <th>Faction(s)</th>
        <th>Fatality</th>
    </tr>
@foreach (var player in @Model.Players.OrderByDescending(p => p.PostCount))
{
    string htmlAttributesString = string.Empty;
    string deadBackgroundColor = string.Empty;
    object htmlAttributes = null;

    if (!player.IsInGame)
    {
        htmlAttributesString = "text-decoration: line-through";
        htmlAttributes = new { style = htmlAttributesString };
        deadBackgroundColor = "background-color: lavenderblush";
    }

    <tr style="@deadBackgroundColor">
        <td>@Html.ActionLink(player.Name, "index", "post", new { playerName = player.Name }, htmlAttributes)</td>
        <td style="@htmlAttributesString">@player.PostCount</td>
        <td>@player.Character</td>
        <td>@player.Role</td>
        <td>@player.Factions</td>
        <td>@player.Fatality</td>

    @if (User.IsInRole("Admin"))
    {
        <td>@Html.ActionLink("Edit", "index", "player", new { playerName = player.Name }, null)</td>
        <td>@Html.ActionLink("Toggle", "ToggleParticipant", "Player", new { playerName = player.Name }, null)</td>
    }
    </tr>
}
</table>

<br />

@if (User.IsInRole("Admin"))
{
    @Html.ActionLink("View All Posters", "index", "player");
    <br />
    <br />
}

Days:

<ul>
    @foreach(var day in @Model.Days.OrderBy(d => d.Number))
    {
        var firstPostLink = ForumLinkGenerator.LinkToForumPost(day.StartForumPostNumber, "First Post");
        string lastPostLinkHtml = string.Empty;

        if (!string.IsNullOrEmpty(day.EndForumPostNumber))
        {
            lastPostLinkHtml = string.Format(" - {0}", ForumLinkGenerator.LinkToForumPost(day.EndForumPostNumber, "Last Post"));
        }

        <li>Day @day.Number - @firstPostLink @Html.Raw(lastPostLinkHtml)</li>
    }
</ul>

@if (User.IsInRole("Admin"))
{
    <br />
    <br />
    using (Html.BeginForm("setday", "day"))
    {
        @Html.Label("Day Number:") @Html.TextBox("dayNumber")
        @Html.Label("Start:") @Html.TextBox("startForumPostNumber")
        @Html.Label("End:") @Html.TextBox("endForumPostNumber")
        <input type="submit" value="Set Day" />
    }
}