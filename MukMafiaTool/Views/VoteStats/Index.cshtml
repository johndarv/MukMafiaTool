@model MukMafiaTool.Models.ViewModels.VoteStatsViewModel

@using System.Linq

@{
    ViewBag.Title = "RLLMUK Mafiascum Helper";
}

<link rel="stylesheet" type="text/css" title="Main" media="screen" href="http://www.rllmukforum.com/public/style_css/css_22/calendar_select.css?ipbv=f8232f3281cda5dedb517bcbb7d47158" />
<link rel="stylesheet" type="text/css" title="Main" media="screen,print" href="http://www.rllmukforum.com/public/style_css/css_22/ipb_common.css?ipbv=f8232f3281cda5dedb517bcbb7d47158" />
<link rel="stylesheet" type="text/css" title="Main" media="screen,print" href="http://www.rllmukforum.com/public/style_css/css_22/ipb_styles.css?ipbv=f8232f3281cda5dedb517bcbb7d47158" />
<link rel="stylesheet" type="text/css" href="http://www.rllmukforum.com/public/style_css/css_22/ipb_ckeditor.css?ipbv=f8232f3281cda5dedb517bcbb7d47158" />
<link rel="stylesheet" type="text/css" href="http://www.rllmukforum.com/public/style_css/prettify.css?ipbv=f8232f3281cda5dedb517bcbb7d47158" />

Totals:
<br />
<table class="table-bordered">
    <tr>
        <td>Votes Cast</td>
        <td>@Model.NumberOfVotes</td>
    </tr>
    <tr>
        <td>Votes onto Town</td>
        <td>@Model.PercentageOfVotesOntoTown.ToString("P")</td>
    </tr>
    <tr>
        <td>Votes onto all Non-Town factions</td>
        <td>@Model.PercentageOfVotesOntoNonTown.ToString("P")</td>
    </tr>
    <tr>
        <td>Votes onto Mafia</td>
        <td>@Model.PercentageOfVotesOntoMafia.ToString("P")</td>
    </tr>
</table>
<br />

Individual Stats:

@{ 
    var individualGroupings = Model.IndividualVoteStats.GroupBy(i => i.FactionName);
}

@foreach (var individualGroup in individualGroupings)
{
    <br />
    @Html.Label(individualGroup.First().FactionName)

    <table class="table-bordered">
        <tr>
            <td>Name</td>
            <td>Votes Cast</td>
            <td>Votes Attracted</td>
            <td>Votes onto Mafia</td>
            <td>Votes onto Non-Town</td>
            <td>Votes onto Town</td>
            <!--<td>Votes onto own Allegiance</td>-->
            <td>Votes onto own Faction</td>
        </tr>

        @foreach (var individual in individualGroup.Where(v => v.VotesCast > 0).OrderByDescending(s => s.VotesCast))
        {
            var characterText = string.IsNullOrEmpty(individual.Character) ? string.Empty : string.Format(" ({0})", individual.Character);

            <tr>
                <td>@individual.Name @characterText</td>
                <td>@individual.VotesCast</td>
                <td>@individual.TimesVotedFor</td>
                <td>@individual.PercentageOfVotesOntoMafia.ToString("P")</td>
                <td>@individual.PercentageOfVotesOntoNonTown.ToString("P")</td>
                <td>@individual.PercentageOfVotesOntoTown.ToString("P")</td>
                <!--<td>@individual.PercentageOfVotesOntoOwnAllegiance.ToString("P")</td>-->
                <td>@individual.PercentageOfVotesOntoOwnFaction.ToString("P")</td>
            </tr>
        }
    </table>
}


<br />
Faction Stats:
<br />
<table class="table-bordered">
    <tr>
        <td>Name</td>
        <td>Allegiance</td>
        <td>Votes Cast</td>
        <td>Votes onto own Faction</td>
    </tr>

    @foreach (var faction in Model.FactionVoteStats.OrderByDescending(s => s.VotesCast))
    {
        <tr>
            <td>@faction.Name</td>
            <td>@faction.Allegiance</td>
            <td>@faction.VotesCast</td>
            <td>@faction.PercentageOfVotesOntoOwnFaction.ToString("P")</td>
        </tr>
    }
</table>